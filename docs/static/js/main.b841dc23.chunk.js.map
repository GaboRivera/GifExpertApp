{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","dato","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","props","categories","index","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAY9C,OACI,oCACI,0BAAMC,SATO,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,OAMV,4CACA,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAjBU,SAACC,GACvBV,EAAcU,EAAKC,OAAOH,a,uBCNrBI,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAClDH,GAFe,+DAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACrC,OACI,yBAAKc,UAAU,QACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCFHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACZf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KActC,OARAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAACC,GACpBC,YAAW,WACPJ,EAAS,CAAEf,KAAMkB,EAAML,SAAS,MACjC,UAER,CAACpB,IAEGqB,EDZ2BM,CAAa3B,GAAvCoB,EAD6B,EAC7BA,QAAeP,EADc,EACpBN,KACjB,OACI,oCACI,4BAAKP,GACJoB,GAAW,0CACZ,yBAAKJ,UAAU,aACVH,EAAOJ,KAAI,SAACC,GAAD,OACR,kBAAC,EAAD,eAAakB,IAAKlB,EAAIC,IAAQD,UEUnCmB,EAlBM,SAACC,GAAW,IAAD,EACQ7C,mBAAS,CAAC,gBADlB,mBACrB8C,EADqB,KACT/C,EADS,KAG5B,OACI,oCACI,4CACA,6BACA,kBAAC,EAAD,CAAaA,cAAeA,IAE5B,4BACK+C,EAAWtB,KAAI,SAACT,EAAUgC,GAAX,OACZ,kBAAC,EAAD,CAASJ,IAAK5B,EAAUA,SAAUA,UCVtDiC,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.b841dc23.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ setcategories }) => {\r\n    const [inputValue, setInputValue] = useState('')\r\n    const handleInputChange = (dato) => {\r\n        setInputValue(dato.target.value)\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (inputValue.trim().length > 2) {\r\n            setcategories((cats) => [inputValue, ...cats])\r\n            setInputValue('')\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <h2>Add category</h2>\r\n                <input\r\n                    type='text'\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                ></input>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setcategories: PropTypes.func.isRequired,\r\n}\r\n","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n        category\r\n    )}&limit=10&api_key=M92umU9WMxE2dKd1Z3hp3GpREVkXgUPL`\r\n    const resp = await fetch(url)\r\n    const { data } = await resp.json()\r\n\r\n    const gifs = data.map((img) => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    })\r\n    return gifs\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n    return (\r\n        <div className='card'>\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    const { loading, data: images } = useFetchGifs(category)\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && <p>Cargando...</p>}\r\n            <div className='card-grid'>\r\n                {images.map((img) => (\r\n                    <GifGridItem key={img.id} {...img} />\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    })\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then((imgs) => {\r\n            setTimeout(() => {\r\n                setState({ data: imgs, loading: false })\r\n            }, 3000)\r\n        })\r\n    }, [category])\r\n\r\n    return state\r\n}\r\n","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid'\n\nconst GifExpertApp = (props) => {\n    const [categories, setcategories] = useState(['dragon ball'])\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <hr></hr>\n            <AddCategory setcategories={setcategories}></AddCategory>\n\n            <ul>\n                {categories.map((category, index) => (\n                    <GifGrid key={category} category={category} />\n                ))}\n            </ul>\n        </>\n    )\n}\n\nexport default GifExpertApp\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport GifExpertApp from './GifExpertApp'\r\n\r\nReactDOM.render(<GifExpertApp />, document.getElementById('root'))\r\n"],"sourceRoot":""}